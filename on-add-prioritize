#!/usr/bin/env python

# Task Prioritization Stub

import sys
import os
import json
import yaml
from core.prioritizer import Prioritizer as P

HOOK_RESIDE = os.path.dirname(__file__)
CNFG_DIR = os.path.join(HOOK_RESIDE, 'cnfg')

sys.path.insert(1, HOOK_RESIDE)


def receive_tasks():
    tasks = [json.loads(line) for line in sys.stdin.readlines()]
    return tasks


def load_cnfg(_file):
    with open(_file, "r") as w_f:
        cnfg = yaml.load(w_f, Loader=yaml.FullLoader)
        return cnfg

if __name__ == "__main__":
    tasks = receive_tasks()
    weights = load_cnfg(os.path.join(CNFG_DIR, 'weights.yml'))
    prioritizer = P(weights)
    prioritizer.act(tasks[-1])  # always last generic for add|modify
